//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct TVDBBasicEpisode: APIModel {

    public let absoluteNumber: Int?

    public let airedEpisodeNumber: Int?

    public let airedSeason: Int?

    public let dvdEpisodeNumber: Int?

    public let dvdSeason: Int?

    public let episodeName: String?

    public let firstAired: String?

    public let id: Int

    public let language: TVDBEpisodeLanguageInfo?

    public let lastUpdated: Int?

    public let overview: String?

    public init(absoluteNumber: Int? = nil, airedEpisodeNumber: Int? = nil, airedSeason: Int? = nil, dvdEpisodeNumber: Int? = nil, dvdSeason: Int? = nil, episodeName: String? = nil, firstAired: String? = nil, id: Int = nil, language: TVDBEpisodeLanguageInfo? = nil, lastUpdated: Int? = nil, overview: String? = nil) {
        self.absoluteNumber = absoluteNumber
        self.airedEpisodeNumber = airedEpisodeNumber
        self.airedSeason = airedSeason
        self.dvdEpisodeNumber = dvdEpisodeNumber
        self.dvdSeason = dvdSeason
        self.episodeName = episodeName
        self.firstAired = firstAired
        self.id = id
        self.language = language
        self.lastUpdated = lastUpdated
        self.overview = overview
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        absoluteNumber = try container.decodeIfPresent("absoluteNumber")
        airedEpisodeNumber = try container.decodeIfPresent("airedEpisodeNumber")
        airedSeason = try container.decodeIfPresent("airedSeason")
        dvdEpisodeNumber = try container.decodeIfPresent("dvdEpisodeNumber")
        dvdSeason = try container.decodeIfPresent("dvdSeason")
        episodeName = try container.decodeIfPresent("episodeName")
        firstAired = try container.decodeIfPresent("firstAired")
        id = try container.decodeIfPresent("id")
        language = try container.decodeIfPresent("language")
        lastUpdated = try container.decodeIfPresent("lastUpdated")
        overview = try container.decodeIfPresent("overview")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(absoluteNumber, forKey: "absoluteNumber")
        try container.encodeIfPresent(airedEpisodeNumber, forKey: "airedEpisodeNumber")
        try container.encodeIfPresent(airedSeason, forKey: "airedSeason")
        try container.encodeIfPresent(dvdEpisodeNumber, forKey: "dvdEpisodeNumber")
        try container.encodeIfPresent(dvdSeason, forKey: "dvdSeason")
        try container.encodeIfPresent(episodeName, forKey: "episodeName")
        try container.encodeIfPresent(firstAired, forKey: "firstAired")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(language, forKey: "language")
        try container.encodeIfPresent(lastUpdated, forKey: "lastUpdated")
        try container.encodeIfPresent(overview, forKey: "overview")
    }

}
